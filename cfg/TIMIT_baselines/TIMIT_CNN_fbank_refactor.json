{
  "cfg_proto": {
    "cfg_proto": "proto/global.proto",
    "cfg_proto_chunk": "proto/global_chunk.proto"
  },
  "exp": {
    "cmd": "",
    "run_nn_script": "run_nn.py",
    "out_folder": "exp/TIMIT_CNN_fbank",
    "seed": 2234,
    "use_cuda": true,
    "multi_gpu": false,
    "save_gpumem": false,
    "n_epochs_tr": 24
  },
  "datasets": {
    "TIMIT_tr": {
      "fea": {
        "fbank": {
          "fea_lst": "/mnt/data/libs/kaldi/egs/timit/s5/data/train/feats_fbank.scp",
          "fea_opts": "apply-cmvn --utt2spk=ark:/mnt/data/libs/kaldi/egs/timit/s5/data/train/utt2spk  ark:/mnt/data/libs/kaldi/egs/timit/s5/fbank/cmvn_train.ark ark:- ark:- | add-deltas --delta-order=0 ark:- ark:- |",
          "cw_left": 5,
          "cw_right": 5
        }
      },
      "lab": {
        "lab_cd": {
          "lab_folder": "/mnt/data/libs/kaldi/egs/timit/s5/exp/dnn4_pretrain-dbn_dnn_ali",
          "lab_opts": "ali-to-pdf",
          "lab_count_file": "auto",
          "lab_data_folder": "/mnt/data/libs/kaldi/egs/timit/s5/data/train/",
          "lab_graph": "/mnt/data/libs/kaldi/egs/timit/s5/exp/tri3/graph"
        }
      },
      "n_chunks": 1
    },
    "TIMIT_dev": {
      "fea": {
        "fbank": {
          "fea_name": "",
          "fea_lst": "/mnt/data/libs/kaldi/egs/timit/s5/data/dev/feats_fbank.scp",
          "fea_opts": "apply-cmvn --utt2spk=ark:/mnt/data/libs/kaldi/egs/timit/s5/data/dev/utt2spk  ark:/mnt/data/libs/kaldi/egs/timit/s5/fbank/cmvn_dev.ark ark:- ark:- | add-deltas --delta-order=0 ark:- ark:- |",
          "cw_left": 5,
          "cw_right": 5
        }
      },
      "lab": {
        "lab_cd": {
          "lab_folder": "/mnt/data/libs/kaldi/egs/timit/s5/exp/dnn4_pretrain-dbn_dnn_ali_dev",
          "lab_opts": "ali-to-pdf",
          "lab_count_file": "auto",
          "lab_data_folder": "/mnt/data/libs/kaldi/egs/timit/s5/data/dev/",
          "lab_graph": "/mnt/data/libs/kaldi/egs/timit/s5/exp/tri3/graph"
        }
      },
      "n_chunks": 1
    },
    "TIMIT_test": {
      "fea": {
        "fbank": {
          "fea_lst": "/mnt/data/libs/kaldi/egs/timit/s5/data/test/feats_fbank.scp",
          "fea_opts": "apply-cmvn --utt2spk=ark:/mnt/data/libs/kaldi/egs/timit/s5/data/test/utt2spk  ark:/mnt/data/libs/kaldi/egs/timit/s5/fbank/cmvn_test.ark ark:- ark:- | add-deltas --delta-order=0 ark:- ark:- |",
          "cw_left": 5,
          "cw_right": 5
        }
      },
      "lab": {
        "lab_cd": {
          "lab_folder": "/mnt/data/libs/kaldi/egs/timit/s5/exp/dnn4_pretrain-dbn_dnn_ali_test",
          "lab_opts": "ali-to-pdf",
          "lab_count_file": "auto",
          "lab_data_folder": "/mnt/data/libs/kaldi/egs/timit/s5/data/test/",
          "lab_graph": "/mnt/data/libs/kaldi/egs/timit/s5/exp/tri3/graph"
        }
      },
      "n_chunks": 1
    }
  },
  "data_use": {
    "train_with": [
      "TIMIT_tr"
    ],
    "valid_with": [
      "TIMIT_dev"
    ],
    "forward_with": [
      "TIMIT_test"
    ]
  },
  "batches": {
    "batch_size_train": 128,
    "max_seq_length_train": 1000,
    "increase_seq_length_train": false,
    "start_seq_len_train": 100,
    "multply_factor_seq_len_train": 2,
    "batch_size_valid": 128,
    "max_seq_length_valid": 1000
  },
  "arch_dict": {
    "CNN_layers": {
      "arch_proto": "proto/CNN.proto",
      "arch_library": "neural_networks",
      "arch_class": "CNN",
      "arch_pretrain_file": "none",
      "arch_freeze": false,
      "arch_seq_model": false,
      "cnn_n_filt": [
        80,
        60,
        60
      ],
      "cnn_len_filt": [
        10,
        3,
        3
      ],
      "cnn_max_pool_len": [
        3,
        2,
        1
      ],
      "cnn_use_laynorm_inp": false,
      "cnn_use_batchnorm_inp": false,
      "cnn_use_laynorm": [
        true,
        true,
        true
      ],
      "cnn_use_batchnorm": [
        false,
        false,
        false
      ],
      "cnn_act": [
        "relu",
        "relu",
        "relu"
      ],
      "cnn_drop": [
        0.15,
        0.15,
        0.15
      ],
      "arch_lr": 0.08,
      "arch_halving_factor": 0.5,
      "arch_improvement_threshold": 0.001,
      "arch_opt": "sgd",
      "opt_momentum": 0.0,
      "opt_weight_decay": 0.0,
      "opt_dampening": 0.0,
      "opt_nesterov": false
    },
    "MLP_layers": {
      "arch_proto": "proto/MLP.proto",
      "arch_library": "neural_networks",
      "arch_class": "MLP",
      "arch_pretrain_file": "none",
      "arch_freeze": false,
      "arch_seq_model": false,
      "dnn_lay": [
        1024,
        1024,
        1024,
        1024,
        1973
      ],
      "dnn_drop": [
        0.15,
        0.15,
        0.15,
        0.15,
        0.0
      ],
      "dnn_use_laynorm_inp": false,
      "dnn_use_batchnorm_inp": false,
      "dnn_use_batchnorm": [
        true,
        true,
        true,
        true,
        false
      ],
      "dnn_use_laynorm": [
        false,
        false,
        false,
        false,
        false
      ],
      "dnn_act": [
        "relu",
        "relu",
        "relu",
        "relu",
        "softmax"
      ],
      "arch_lr": 0.08,
      "arch_halving_factor": 0.5,
      "arch_improvement_threshold": 0.001,
      "arch_opt": "sgd",
      "opt_momentum": 0.0,
      "opt_weight_decay": 0.0,
      "opt_dampening": 0.0,
      "opt_nesterov": false
    }
  },
  "model": {
    "model_proto": "proto/model.proto",
    "model": [
      {
        "out_name": "out_dnn1",
        "operation": "compute",
        "inp1": "CNN_layers",
        "inp2": "fbank"
      },
      {
        "out_name": "out_dnn2",
        "operation": "compute",
        "inp1": "MLP_layers",
        "inp2": "out_dnn1"
      },
      {
        "out_name": "loss_final",
        "operation": "cost_nll",
        "inp1": "out_dnn2",
        "inp2": "lab_cd"
      },
      {
        "out_name": "err_final",
        "operation": "cost_err",
        "inp1": "out_dnn2",
        "inp2": "lab_cd"
      }
    ]
  },
  "forward": {
    "forward_out": [
      "out_dnn2"
    ],
    "normalize_posteriors": [
      true
    ],
    "normalize_with_counts_from": [
      "lab_cd"
    ],
    "save_out_file": true,
    "require_decoding": [
      true
    ]
  },
  "decoding": {
    "decoding_script_folder": "kaldi_decoding_scripts/",
    "decoding_script": "decode_dnn.sh",
    "decoding_proto": "proto/decoding.proto",
    "min_active": 200,
    "max_active": 7000,
    "max_mem": 50000000,
    "beam": 13.0,
    "latbeam": 8.0,
    "acwt": 0.2,
    "max_arcs": -1.0,
    "skip_scoring": "false",
    "scoring_script": "local/score.sh",
    "scoring_opts": "\"--min-lmwt 1 --max-lmwt 10\"",
    "norm_vars": false
  }
}